Terminals unused in grammar

   T_LessEqual
   T_GreaterEqual
   T_Equal
   T_NotEqual
   T_And
   T_Or
   T_Null
   T_This
   T_While
   T_For
   T_Return
   T_Break
   T_NewArray
   T_Print
   T_ReadInteger
   T_StringConstant
   T_IntConstant
   T_DoubleConstant
   T_BoolConstant


Estado 0 conflictos: 7 desplazamiento(s)/reducci'on(ones)
Estado 9 conflictos: 7 desplazamiento/reducci'on, 1 reducci'on/reducci'on
Estado 56 conflictos: 6 desplazamiento(s)/reducci'on(ones)
Estado 96 conflictos: 1 desplazamiento(s)/reducci'on(ones)


Gram'atica

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: VarDecl
    5     | FnDecl
    6     | ClassDecl
    7     | InterfaceDecl

    8 VarDecl: Var ';'

    9 Var: Type T_Identifier

   10 Type: T_Int
   11     | T_Double
   12     | T_Bool
   13     | T_String
   14     | Type T_Dims

   15 VarList: VarList ',' Var
   16        | Var
   17        | /* vac'io */

   18 FnDecl: Type T_Identifier '(' VarList ')' StmtBlock
   19       | T_Void T_Identifier '(' VarList ')' StmtBlock
   20       | /* vac'io */

   21 VarDeclList: VarDeclList VarDecl
   22            | VarDecl

   23 StmtBlock: '{' VarDeclList StmtList '}'
   24          | '{' VarDeclList '}'
   25          | '{' StmtList '}'
   26          | '{' '}'

   27 StmtList: StmtList Stmt
   28         | Stmt

   29 Stmt: OneExpr ';'
   30     | StmtBlock
   31     | IfStmt

   32 Expr: T_ReadLine '(' ')'
   33     | T_New T_Identifier

   34 OneExpr: Expr
   35        | /* vac'io */

   36 ClassDecl: T_Class T_Identifier Extends Implements '{' FieldList '}'

   37 Extends: T_Extends T_Identifier
   38        | /* vac'io */

   39 IdentifierList: IdentifierList ',' T_Identifier
   40               | T_Identifier

   41 Implements: T_Implements IdentifierList
   42           | /* vac'io */

   43 Field: VarDecl
   44      | FnDecl

   45 FieldList: FieldList Field
   46          | /* vac'io */

   47 Prototype: Type T_Identifier '(' VarList ')' ';'
   48          | T_Void T_Identifier '(' VarList ')' ';'

   49 PrototypeList: PrototypeList Prototype
   50              | Prototype

   51 InterfaceDecl: T_Interface T_Identifier '{' PrototypeList '}'

   52 IfStmt: T_If '(' Expr ')' Stmt
   53       | T_If '(' Expr ')' Stmt T_Else Stmt


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 18 19 32 47 48 52 53
')' (41) 18 19 32 47 48 52 53
',' (44) 15 39
';' (59) 8 29 47 48
'{' (123) 23 24 25 26 36 51
'}' (125) 23 24 25 26 36 51
error (256)
T_Void (258) 19 48
T_Bool (259) 12
T_Int (260) 10
T_Double (261) 11
T_String (262) 13
T_Class (263) 36
T_LessEqual (264)
T_GreaterEqual (265)
T_Equal (266)
T_NotEqual (267)
T_Dims (268) 14
T_And (269)
T_Or (270)
T_Null (271)
T_Extends (272) 37
T_This (273)
T_Interface (274) 51
T_Implements (275) 41
T_While (276)
T_For (277)
T_If (278) 52 53
T_Else (279) 53
T_Return (280)
T_Break (281)
T_New (282) 33
T_NewArray (283)
T_Print (284)
T_ReadInteger (285)
T_ReadLine (286) 32
T_Identifier (287) 9 18 19 33 36 37 39 40 47 48 51
T_StringConstant (288)
T_IntConstant (289)
T_DoubleConstant (290)
T_BoolConstant (291)


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
Program (44)
    en la izquierda: 1, en la derecha: 0
DeclList (45)
    en la izquierda: 2 3, en la derecha: 1 2
Decl (46)
    en la izquierda: 4 5 6 7, en la derecha: 2 3
VarDecl (47)
    en la izquierda: 8, en la derecha: 4 21 22 43
Var (48)
    en la izquierda: 9, en la derecha: 8 15 16
Type (49)
    en la izquierda: 10 11 12 13 14, en la derecha: 9 14 18 47
VarList (50)
    en la izquierda: 15 16 17, en la derecha: 15 18 19 47 48
FnDecl (51)
    en la izquierda: 18 19 20, en la derecha: 5 44
VarDeclList (52)
    en la izquierda: 21 22, en la derecha: 21 23 24
StmtBlock (53)
    en la izquierda: 23 24 25 26, en la derecha: 18 19 30
StmtList (54)
    en la izquierda: 27 28, en la derecha: 23 25 27
Stmt (55)
    en la izquierda: 29 30 31, en la derecha: 27 28 52 53
Expr (56)
    en la izquierda: 32 33, en la derecha: 34 52 53
OneExpr (57)
    en la izquierda: 34 35, en la derecha: 29
ClassDecl (58)
    en la izquierda: 36, en la derecha: 6
Extends (59)
    en la izquierda: 37 38, en la derecha: 36
IdentifierList (60)
    en la izquierda: 39 40, en la derecha: 39 41
Implements (61)
    en la izquierda: 41 42, en la derecha: 36
Field (62)
    en la izquierda: 43 44, en la derecha: 45
FieldList (63)
    en la izquierda: 45 46, en la derecha: 36 45
Prototype (64)
    en la izquierda: 47 48, en la derecha: 49 50
PrototypeList (65)
    en la izquierda: 49 50, en la derecha: 49 51
InterfaceDecl (66)
    en la izquierda: 51, en la derecha: 7
IfStmt (67)
    en la izquierda: 52 53, en la derecha: 31


State 0

    0 $accept: . Program $end

    T_Void       desplazar e ir al estado 1
    T_Bool       desplazar e ir al estado 2
    T_Int        desplazar e ir al estado 3
    T_Double     desplazar e ir al estado 4
    T_String     desplazar e ir al estado 5
    T_Class      desplazar e ir al estado 6
    T_Interface  desplazar e ir al estado 7

    T_Void       [reduce usando la regla 20 (FnDecl)]
    T_Bool       [reduce usando la regla 20 (FnDecl)]
    T_Int        [reduce usando la regla 20 (FnDecl)]
    T_Double     [reduce usando la regla 20 (FnDecl)]
    T_String     [reduce usando la regla 20 (FnDecl)]
    T_Class      [reduce usando la regla 20 (FnDecl)]
    T_Interface  [reduce usando la regla 20 (FnDecl)]
    $default     reduce usando la regla 20 (FnDecl)

    Program        ir al estado 8
    DeclList       ir al estado 9
    Decl           ir al estado 10
    VarDecl        ir al estado 11
    Var            ir al estado 12
    Type           ir al estado 13
    FnDecl         ir al estado 14
    ClassDecl      ir al estado 15
    InterfaceDecl  ir al estado 16


State 1

   19 FnDecl: T_Void . T_Identifier '(' VarList ')' StmtBlock

    T_Identifier  desplazar e ir al estado 17


State 2

   12 Type: T_Bool .

    $default  reduce usando la regla 12 (Type)


State 3

   10 Type: T_Int .

    $default  reduce usando la regla 10 (Type)


State 4

   11 Type: T_Double .

    $default  reduce usando la regla 11 (Type)


State 5

   13 Type: T_String .

    $default  reduce usando la regla 13 (Type)


State 6

   36 ClassDecl: T_Class . T_Identifier Extends Implements '{' FieldList '}'

    T_Identifier  desplazar e ir al estado 18


State 7

   51 InterfaceDecl: T_Interface . T_Identifier '{' PrototypeList '}'

    T_Identifier  desplazar e ir al estado 19


State 8

    0 $accept: Program . $end

    $end  desplazar e ir al estado 20


State 9

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    T_Void       desplazar e ir al estado 1
    T_Bool       desplazar e ir al estado 2
    T_Int        desplazar e ir al estado 3
    T_Double     desplazar e ir al estado 4
    T_String     desplazar e ir al estado 5
    T_Class      desplazar e ir al estado 6
    T_Interface  desplazar e ir al estado 7

    $end         reduce usando la regla 1 (Program)
    $end         [reduce usando la regla 20 (FnDecl)]
    T_Void       [reduce usando la regla 20 (FnDecl)]
    T_Bool       [reduce usando la regla 20 (FnDecl)]
    T_Int        [reduce usando la regla 20 (FnDecl)]
    T_Double     [reduce usando la regla 20 (FnDecl)]
    T_String     [reduce usando la regla 20 (FnDecl)]
    T_Class      [reduce usando la regla 20 (FnDecl)]
    T_Interface  [reduce usando la regla 20 (FnDecl)]
    $default     reduce usando la regla 1 (Program)

    Decl           ir al estado 21
    VarDecl        ir al estado 11
    Var            ir al estado 12
    Type           ir al estado 13
    FnDecl         ir al estado 14
    ClassDecl      ir al estado 15
    InterfaceDecl  ir al estado 16


State 10

    3 DeclList: Decl .

    $default  reduce usando la regla 3 (DeclList)


State 11

    4 Decl: VarDecl .

    $default  reduce usando la regla 4 (Decl)


State 12

    8 VarDecl: Var . ';'

    ';'  desplazar e ir al estado 22


State 13

    9 Var: Type . T_Identifier
   14 Type: Type . T_Dims
   18 FnDecl: Type . T_Identifier '(' VarList ')' StmtBlock

    T_Dims        desplazar e ir al estado 23
    T_Identifier  desplazar e ir al estado 24


State 14

    5 Decl: FnDecl .

    $default  reduce usando la regla 5 (Decl)


State 15

    6 Decl: ClassDecl .

    $default  reduce usando la regla 6 (Decl)


State 16

    7 Decl: InterfaceDecl .

    $default  reduce usando la regla 7 (Decl)


State 17

   19 FnDecl: T_Void T_Identifier . '(' VarList ')' StmtBlock

    '('  desplazar e ir al estado 25


State 18

   36 ClassDecl: T_Class T_Identifier . Extends Implements '{' FieldList '}'

    T_Extends  desplazar e ir al estado 26

    $default  reduce usando la regla 38 (Extends)

    Extends  ir al estado 27


State 19

   51 InterfaceDecl: T_Interface T_Identifier . '{' PrototypeList '}'

    '{'  desplazar e ir al estado 28


State 20

    0 $accept: Program $end .

    $default  aceptar


State 21

    2 DeclList: DeclList Decl .

    $default  reduce usando la regla 2 (DeclList)


State 22

    8 VarDecl: Var ';' .

    $default  reduce usando la regla 8 (VarDecl)


State 23

   14 Type: Type T_Dims .

    $default  reduce usando la regla 14 (Type)


State 24

    9 Var: Type T_Identifier .
   18 FnDecl: Type T_Identifier . '(' VarList ')' StmtBlock

    '('  desplazar e ir al estado 29

    $default  reduce usando la regla 9 (Var)


State 25

   19 FnDecl: T_Void T_Identifier '(' . VarList ')' StmtBlock

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 32


State 26

   37 Extends: T_Extends . T_Identifier

    T_Identifier  desplazar e ir al estado 33


State 27

   36 ClassDecl: T_Class T_Identifier Extends . Implements '{' FieldList '}'

    T_Implements  desplazar e ir al estado 34

    $default  reduce usando la regla 42 (Implements)

    Implements  ir al estado 35


State 28

   51 InterfaceDecl: T_Interface T_Identifier '{' . PrototypeList '}'

    T_Void    desplazar e ir al estado 36
    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    Type           ir al estado 37
    Prototype      ir al estado 38
    PrototypeList  ir al estado 39


State 29

   18 FnDecl: Type T_Identifier '(' . VarList ')' StmtBlock

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 40


State 30

   16 VarList: Var .

    $default  reduce usando la regla 16 (VarList)


State 31

    9 Var: Type . T_Identifier
   14 Type: Type . T_Dims

    T_Dims        desplazar e ir al estado 23
    T_Identifier  desplazar e ir al estado 41


State 32

   15 VarList: VarList . ',' Var
   19 FnDecl: T_Void T_Identifier '(' VarList . ')' StmtBlock

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 43


State 33

   37 Extends: T_Extends T_Identifier .

    $default  reduce usando la regla 37 (Extends)


State 34

   41 Implements: T_Implements . IdentifierList

    T_Identifier  desplazar e ir al estado 44

    IdentifierList  ir al estado 45


State 35

   36 ClassDecl: T_Class T_Identifier Extends Implements . '{' FieldList '}'

    '{'  desplazar e ir al estado 46


State 36

   48 Prototype: T_Void . T_Identifier '(' VarList ')' ';'

    T_Identifier  desplazar e ir al estado 47


State 37

   14 Type: Type . T_Dims
   47 Prototype: Type . T_Identifier '(' VarList ')' ';'

    T_Dims        desplazar e ir al estado 23
    T_Identifier  desplazar e ir al estado 48


State 38

   50 PrototypeList: Prototype .

    $default  reduce usando la regla 50 (PrototypeList)


State 39

   49 PrototypeList: PrototypeList . Prototype
   51 InterfaceDecl: T_Interface T_Identifier '{' PrototypeList . '}'

    T_Void    desplazar e ir al estado 36
    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5
    '}'       desplazar e ir al estado 49

    Type       ir al estado 37
    Prototype  ir al estado 50


State 40

   15 VarList: VarList . ',' Var
   18 FnDecl: Type T_Identifier '(' VarList . ')' StmtBlock

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 51


State 41

    9 Var: Type T_Identifier .

    $default  reduce usando la regla 9 (Var)


State 42

   15 VarList: VarList ',' . Var

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    Var   ir al estado 52
    Type  ir al estado 31


State 43

   19 FnDecl: T_Void T_Identifier '(' VarList ')' . StmtBlock

    '{'  desplazar e ir al estado 53

    StmtBlock  ir al estado 54


State 44

   40 IdentifierList: T_Identifier .

    $default  reduce usando la regla 40 (IdentifierList)


State 45

   39 IdentifierList: IdentifierList . ',' T_Identifier
   41 Implements: T_Implements IdentifierList .

    ','  desplazar e ir al estado 55

    $default  reduce usando la regla 41 (Implements)


State 46

   36 ClassDecl: T_Class T_Identifier Extends Implements '{' . FieldList '}'

    $default  reduce usando la regla 46 (FieldList)

    FieldList  ir al estado 56


State 47

   48 Prototype: T_Void T_Identifier . '(' VarList ')' ';'

    '('  desplazar e ir al estado 57


State 48

   47 Prototype: Type T_Identifier . '(' VarList ')' ';'

    '('  desplazar e ir al estado 58


State 49

   51 InterfaceDecl: T_Interface T_Identifier '{' PrototypeList '}' .

    $default  reduce usando la regla 51 (InterfaceDecl)


State 50

   49 PrototypeList: PrototypeList Prototype .

    $default  reduce usando la regla 49 (PrototypeList)


State 51

   18 FnDecl: Type T_Identifier '(' VarList ')' . StmtBlock

    '{'  desplazar e ir al estado 53

    StmtBlock  ir al estado 59


State 52

   15 VarList: VarList ',' Var .

    $default  reduce usando la regla 15 (VarList)


State 53

   23 StmtBlock: '{' . VarDeclList StmtList '}'
   24          | '{' . VarDeclList '}'
   25          | '{' . StmtList '}'
   26          | '{' . '}'

    T_Bool      desplazar e ir al estado 2
    T_Int       desplazar e ir al estado 3
    T_Double    desplazar e ir al estado 4
    T_String    desplazar e ir al estado 5
    T_If        desplazar e ir al estado 60
    T_New       desplazar e ir al estado 61
    T_ReadLine  desplazar e ir al estado 62
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 63

    $default  reduce usando la regla 35 (OneExpr)

    VarDecl      ir al estado 64
    Var          ir al estado 12
    Type         ir al estado 31
    VarDeclList  ir al estado 65
    StmtBlock    ir al estado 66
    StmtList     ir al estado 67
    Stmt         ir al estado 68
    Expr         ir al estado 69
    OneExpr      ir al estado 70
    IfStmt       ir al estado 71


State 54

   19 FnDecl: T_Void T_Identifier '(' VarList ')' StmtBlock .

    $default  reduce usando la regla 19 (FnDecl)


State 55

   39 IdentifierList: IdentifierList ',' . T_Identifier

    T_Identifier  desplazar e ir al estado 72


State 56

   36 ClassDecl: T_Class T_Identifier Extends Implements '{' FieldList . '}'
   45 FieldList: FieldList . Field

    T_Void    desplazar e ir al estado 1
    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5
    '}'       desplazar e ir al estado 73

    T_Void    [reduce usando la regla 20 (FnDecl)]
    T_Bool    [reduce usando la regla 20 (FnDecl)]
    T_Int     [reduce usando la regla 20 (FnDecl)]
    T_Double  [reduce usando la regla 20 (FnDecl)]
    T_String  [reduce usando la regla 20 (FnDecl)]
    '}'       [reduce usando la regla 20 (FnDecl)]

    VarDecl  ir al estado 74
    Var      ir al estado 12
    Type     ir al estado 13
    FnDecl   ir al estado 75
    Field    ir al estado 76


State 57

   48 Prototype: T_Void T_Identifier '(' . VarList ')' ';'

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 77


State 58

   47 Prototype: Type T_Identifier '(' . VarList ')' ';'

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 78


State 59

   18 FnDecl: Type T_Identifier '(' VarList ')' StmtBlock .

    $default  reduce usando la regla 18 (FnDecl)


State 60

   52 IfStmt: T_If . '(' Expr ')' Stmt
   53       | T_If . '(' Expr ')' Stmt T_Else Stmt

    '('  desplazar e ir al estado 79


State 61

   33 Expr: T_New . T_Identifier

    T_Identifier  desplazar e ir al estado 80


State 62

   32 Expr: T_ReadLine . '(' ')'

    '('  desplazar e ir al estado 81


State 63

   26 StmtBlock: '{' '}' .

    $default  reduce usando la regla 26 (StmtBlock)


State 64

   22 VarDeclList: VarDecl .

    $default  reduce usando la regla 22 (VarDeclList)


State 65

   21 VarDeclList: VarDeclList . VarDecl
   23 StmtBlock: '{' VarDeclList . StmtList '}'
   24          | '{' VarDeclList . '}'

    T_Bool      desplazar e ir al estado 2
    T_Int       desplazar e ir al estado 3
    T_Double    desplazar e ir al estado 4
    T_String    desplazar e ir al estado 5
    T_If        desplazar e ir al estado 60
    T_New       desplazar e ir al estado 61
    T_ReadLine  desplazar e ir al estado 62
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 82

    $default  reduce usando la regla 35 (OneExpr)

    VarDecl    ir al estado 83
    Var        ir al estado 12
    Type       ir al estado 31
    StmtBlock  ir al estado 66
    StmtList   ir al estado 84
    Stmt       ir al estado 68
    Expr       ir al estado 69
    OneExpr    ir al estado 70
    IfStmt     ir al estado 71


State 66

   30 Stmt: StmtBlock .

    $default  reduce usando la regla 30 (Stmt)


State 67

   25 StmtBlock: '{' StmtList . '}'
   27 StmtList: StmtList . Stmt

    T_If        desplazar e ir al estado 60
    T_New       desplazar e ir al estado 61
    T_ReadLine  desplazar e ir al estado 62
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 85

    $default  reduce usando la regla 35 (OneExpr)

    StmtBlock  ir al estado 66
    Stmt       ir al estado 86
    Expr       ir al estado 69
    OneExpr    ir al estado 70
    IfStmt     ir al estado 71


State 68

   28 StmtList: Stmt .

    $default  reduce usando la regla 28 (StmtList)


State 69

   34 OneExpr: Expr .

    $default  reduce usando la regla 34 (OneExpr)


State 70

   29 Stmt: OneExpr . ';'

    ';'  desplazar e ir al estado 87


State 71

   31 Stmt: IfStmt .

    $default  reduce usando la regla 31 (Stmt)


State 72

   39 IdentifierList: IdentifierList ',' T_Identifier .

    $default  reduce usando la regla 39 (IdentifierList)


State 73

   36 ClassDecl: T_Class T_Identifier Extends Implements '{' FieldList '}' .

    $default  reduce usando la regla 36 (ClassDecl)


State 74

   43 Field: VarDecl .

    $default  reduce usando la regla 43 (Field)


State 75

   44 Field: FnDecl .

    $default  reduce usando la regla 44 (Field)


State 76

   45 FieldList: FieldList Field .

    $default  reduce usando la regla 45 (FieldList)


State 77

   15 VarList: VarList . ',' Var
   48 Prototype: T_Void T_Identifier '(' VarList . ')' ';'

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 88


State 78

   15 VarList: VarList . ',' Var
   47 Prototype: Type T_Identifier '(' VarList . ')' ';'

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 89


State 79

   52 IfStmt: T_If '(' . Expr ')' Stmt
   53       | T_If '(' . Expr ')' Stmt T_Else Stmt

    T_New       desplazar e ir al estado 61
    T_ReadLine  desplazar e ir al estado 62

    Expr  ir al estado 90


State 80

   33 Expr: T_New T_Identifier .

    $default  reduce usando la regla 33 (Expr)


State 81

   32 Expr: T_ReadLine '(' . ')'

    ')'  desplazar e ir al estado 91


State 82

   24 StmtBlock: '{' VarDeclList '}' .

    $default  reduce usando la regla 24 (StmtBlock)


State 83

   21 VarDeclList: VarDeclList VarDecl .

    $default  reduce usando la regla 21 (VarDeclList)


State 84

   23 StmtBlock: '{' VarDeclList StmtList . '}'
   27 StmtList: StmtList . Stmt

    T_If        desplazar e ir al estado 60
    T_New       desplazar e ir al estado 61
    T_ReadLine  desplazar e ir al estado 62
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 92

    $default  reduce usando la regla 35 (OneExpr)

    StmtBlock  ir al estado 66
    Stmt       ir al estado 86
    Expr       ir al estado 69
    OneExpr    ir al estado 70
    IfStmt     ir al estado 71


State 85

   25 StmtBlock: '{' StmtList '}' .

    $default  reduce usando la regla 25 (StmtBlock)


State 86

   27 StmtList: StmtList Stmt .

    $default  reduce usando la regla 27 (StmtList)


State 87

   29 Stmt: OneExpr ';' .

    $default  reduce usando la regla 29 (Stmt)


State 88

   48 Prototype: T_Void T_Identifier '(' VarList ')' . ';'

    ';'  desplazar e ir al estado 93


State 89

   47 Prototype: Type T_Identifier '(' VarList ')' . ';'

    ';'  desplazar e ir al estado 94


State 90

   52 IfStmt: T_If '(' Expr . ')' Stmt
   53       | T_If '(' Expr . ')' Stmt T_Else Stmt

    ')'  desplazar e ir al estado 95


State 91

   32 Expr: T_ReadLine '(' ')' .

    $default  reduce usando la regla 32 (Expr)


State 92

   23 StmtBlock: '{' VarDeclList StmtList '}' .

    $default  reduce usando la regla 23 (StmtBlock)


State 93

   48 Prototype: T_Void T_Identifier '(' VarList ')' ';' .

    $default  reduce usando la regla 48 (Prototype)


State 94

   47 Prototype: Type T_Identifier '(' VarList ')' ';' .

    $default  reduce usando la regla 47 (Prototype)


State 95

   52 IfStmt: T_If '(' Expr ')' . Stmt
   53       | T_If '(' Expr ')' . Stmt T_Else Stmt

    T_If        desplazar e ir al estado 60
    T_New       desplazar e ir al estado 61
    T_ReadLine  desplazar e ir al estado 62
    '{'         desplazar e ir al estado 53

    $default  reduce usando la regla 35 (OneExpr)

    StmtBlock  ir al estado 66
    Stmt       ir al estado 96
    Expr       ir al estado 69
    OneExpr    ir al estado 70
    IfStmt     ir al estado 71


State 96

   52 IfStmt: T_If '(' Expr ')' Stmt .
   53       | T_If '(' Expr ')' Stmt . T_Else Stmt

    T_Else  desplazar e ir al estado 97

    T_Else    [reduce usando la regla 52 (IfStmt)]
    $default  reduce usando la regla 52 (IfStmt)


State 97

   53 IfStmt: T_If '(' Expr ')' Stmt T_Else . Stmt

    T_If        desplazar e ir al estado 60
    T_New       desplazar e ir al estado 61
    T_ReadLine  desplazar e ir al estado 62
    '{'         desplazar e ir al estado 53

    $default  reduce usando la regla 35 (OneExpr)

    StmtBlock  ir al estado 66
    Stmt       ir al estado 98
    Expr       ir al estado 69
    OneExpr    ir al estado 70
    IfStmt     ir al estado 71


State 98

   53 IfStmt: T_If '(' Expr ')' Stmt T_Else Stmt .

    $default  reduce usando la regla 53 (IfStmt)
