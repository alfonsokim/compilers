Terminals unused in grammar

   T_LessEqual
   T_GreaterEqual
   T_Equal
   T_NotEqual
   T_And
   T_Or
   T_Null
   T_This
   T_Break
   T_NewArray
   T_Print
   T_ReadInteger
   T_StringConstant
   T_IntConstant
   T_DoubleConstant
   T_BoolConstant


Estado 0 conflictos: 7 desplazamiento(s)/reducci'on(ones)
Estado 9 conflictos: 7 desplazamiento/reducci'on, 1 reducci'on/reducci'on
Estado 56 conflictos: 6 desplazamiento(s)/reducci'on(ones)
Estado 112 conflictos: 1 desplazamiento(s)/reducci'on(ones)


Gram'atica

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: VarDecl
    5     | FnDecl
    6     | ClassDecl
    7     | InterfaceDecl

    8 VarDecl: Var ';'

    9 Var: Type T_Identifier

   10 Type: T_Int
   11     | T_Double
   12     | T_Bool
   13     | T_String
   14     | Type T_Dims

   15 VarList: VarList ',' Var
   16        | Var
   17        | /* vac'io */

   18 FnDecl: Type T_Identifier '(' VarList ')' StmtBlock
   19       | T_Void T_Identifier '(' VarList ')' StmtBlock
   20       | /* vac'io */

   21 VarDeclList: VarDeclList VarDecl
   22            | VarDecl

   23 StmtBlock: '{' VarDeclList StmtList '}'
   24          | '{' VarDeclList '}'
   25          | '{' StmtList '}'
   26          | '{' '}'

   27 StmtList: StmtList Stmt
   28         | Stmt

   29 Stmt: OneExpr ';'
   30     | StmtBlock
   31     | IfStmt
   32     | WhileStmt
   33     | ForStmt
   34     | ReturnStmt

   35 Expr: T_ReadLine '(' ')'
   36     | T_New T_Identifier

   37 OneExpr: Expr
   38        | /* vac'io */

   39 ClassDecl: T_Class T_Identifier Extends Implements '{' FieldList '}'

   40 Extends: T_Extends T_Identifier
   41        | /* vac'io */

   42 IdentifierList: IdentifierList ',' T_Identifier
   43               | T_Identifier

   44 Implements: T_Implements IdentifierList
   45           | /* vac'io */

   46 Field: VarDecl
   47      | FnDecl

   48 FieldList: FieldList Field
   49          | /* vac'io */

   50 Prototype: Type T_Identifier '(' VarList ')' ';'
   51          | T_Void T_Identifier '(' VarList ')' ';'

   52 PrototypeList: PrototypeList Prototype
   53              | Prototype

   54 InterfaceDecl: T_Interface T_Identifier '{' PrototypeList '}'

   55 IfStmt: T_If '(' Expr ')' Stmt
   56       | T_If '(' Expr ')' Stmt T_Else Stmt

   57 WhileStmt: T_While '(' Expr ')' Stmt

   58 ForStmt: T_For '(' OneExpr ';' Expr ';' OneExpr ')' Stmt

   59 ReturnStmt: T_Return OneExpr ';'


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 18 19 35 50 51 55 56 57 58
')' (41) 18 19 35 50 51 55 56 57 58
',' (44) 15 42
';' (59) 8 29 50 51 58 59
'{' (123) 23 24 25 26 39 54
'}' (125) 23 24 25 26 39 54
error (256)
T_Void (258) 19 51
T_Bool (259) 12
T_Int (260) 10
T_Double (261) 11
T_String (262) 13
T_Class (263) 39
T_LessEqual (264)
T_GreaterEqual (265)
T_Equal (266)
T_NotEqual (267)
T_Dims (268) 14
T_And (269)
T_Or (270)
T_Null (271)
T_Extends (272) 40
T_This (273)
T_Interface (274) 54
T_Implements (275) 44
T_While (276) 57
T_For (277) 58
T_If (278) 55 56
T_Else (279) 56
T_Return (280) 59
T_Break (281)
T_New (282) 36
T_NewArray (283)
T_Print (284)
T_ReadInteger (285)
T_ReadLine (286) 35
T_Identifier (287) 9 18 19 36 39 40 42 43 50 51 54
T_StringConstant (288)
T_IntConstant (289)
T_DoubleConstant (290)
T_BoolConstant (291)


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
Program (44)
    en la izquierda: 1, en la derecha: 0
DeclList (45)
    en la izquierda: 2 3, en la derecha: 1 2
Decl (46)
    en la izquierda: 4 5 6 7, en la derecha: 2 3
VarDecl (47)
    en la izquierda: 8, en la derecha: 4 21 22 46
Var (48)
    en la izquierda: 9, en la derecha: 8 15 16
Type (49)
    en la izquierda: 10 11 12 13 14, en la derecha: 9 14 18 50
VarList (50)
    en la izquierda: 15 16 17, en la derecha: 15 18 19 50 51
FnDecl (51)
    en la izquierda: 18 19 20, en la derecha: 5 47
VarDeclList (52)
    en la izquierda: 21 22, en la derecha: 21 23 24
StmtBlock (53)
    en la izquierda: 23 24 25 26, en la derecha: 18 19 30
StmtList (54)
    en la izquierda: 27 28, en la derecha: 23 25 27
Stmt (55)
    en la izquierda: 29 30 31 32 33 34, en la derecha: 27 28 55 56
    57 58
Expr (56)
    en la izquierda: 35 36, en la derecha: 37 55 56 57 58
OneExpr (57)
    en la izquierda: 37 38, en la derecha: 29 58 59
ClassDecl (58)
    en la izquierda: 39, en la derecha: 6
Extends (59)
    en la izquierda: 40 41, en la derecha: 39
IdentifierList (60)
    en la izquierda: 42 43, en la derecha: 42 44
Implements (61)
    en la izquierda: 44 45, en la derecha: 39
Field (62)
    en la izquierda: 46 47, en la derecha: 48
FieldList (63)
    en la izquierda: 48 49, en la derecha: 39 48
Prototype (64)
    en la izquierda: 50 51, en la derecha: 52 53
PrototypeList (65)
    en la izquierda: 52 53, en la derecha: 52 54
InterfaceDecl (66)
    en la izquierda: 54, en la derecha: 7
IfStmt (67)
    en la izquierda: 55 56, en la derecha: 31
WhileStmt (68)
    en la izquierda: 57, en la derecha: 32
ForStmt (69)
    en la izquierda: 58, en la derecha: 33
ReturnStmt (70)
    en la izquierda: 59, en la derecha: 34


State 0

    0 $accept: . Program $end

    T_Void       desplazar e ir al estado 1
    T_Bool       desplazar e ir al estado 2
    T_Int        desplazar e ir al estado 3
    T_Double     desplazar e ir al estado 4
    T_String     desplazar e ir al estado 5
    T_Class      desplazar e ir al estado 6
    T_Interface  desplazar e ir al estado 7

    T_Void       [reduce usando la regla 20 (FnDecl)]
    T_Bool       [reduce usando la regla 20 (FnDecl)]
    T_Int        [reduce usando la regla 20 (FnDecl)]
    T_Double     [reduce usando la regla 20 (FnDecl)]
    T_String     [reduce usando la regla 20 (FnDecl)]
    T_Class      [reduce usando la regla 20 (FnDecl)]
    T_Interface  [reduce usando la regla 20 (FnDecl)]
    $default     reduce usando la regla 20 (FnDecl)

    Program        ir al estado 8
    DeclList       ir al estado 9
    Decl           ir al estado 10
    VarDecl        ir al estado 11
    Var            ir al estado 12
    Type           ir al estado 13
    FnDecl         ir al estado 14
    ClassDecl      ir al estado 15
    InterfaceDecl  ir al estado 16


State 1

   19 FnDecl: T_Void . T_Identifier '(' VarList ')' StmtBlock

    T_Identifier  desplazar e ir al estado 17


State 2

   12 Type: T_Bool .

    $default  reduce usando la regla 12 (Type)


State 3

   10 Type: T_Int .

    $default  reduce usando la regla 10 (Type)


State 4

   11 Type: T_Double .

    $default  reduce usando la regla 11 (Type)


State 5

   13 Type: T_String .

    $default  reduce usando la regla 13 (Type)


State 6

   39 ClassDecl: T_Class . T_Identifier Extends Implements '{' FieldList '}'

    T_Identifier  desplazar e ir al estado 18


State 7

   54 InterfaceDecl: T_Interface . T_Identifier '{' PrototypeList '}'

    T_Identifier  desplazar e ir al estado 19


State 8

    0 $accept: Program . $end

    $end  desplazar e ir al estado 20


State 9

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    T_Void       desplazar e ir al estado 1
    T_Bool       desplazar e ir al estado 2
    T_Int        desplazar e ir al estado 3
    T_Double     desplazar e ir al estado 4
    T_String     desplazar e ir al estado 5
    T_Class      desplazar e ir al estado 6
    T_Interface  desplazar e ir al estado 7

    $end         reduce usando la regla 1 (Program)
    $end         [reduce usando la regla 20 (FnDecl)]
    T_Void       [reduce usando la regla 20 (FnDecl)]
    T_Bool       [reduce usando la regla 20 (FnDecl)]
    T_Int        [reduce usando la regla 20 (FnDecl)]
    T_Double     [reduce usando la regla 20 (FnDecl)]
    T_String     [reduce usando la regla 20 (FnDecl)]
    T_Class      [reduce usando la regla 20 (FnDecl)]
    T_Interface  [reduce usando la regla 20 (FnDecl)]
    $default     reduce usando la regla 1 (Program)

    Decl           ir al estado 21
    VarDecl        ir al estado 11
    Var            ir al estado 12
    Type           ir al estado 13
    FnDecl         ir al estado 14
    ClassDecl      ir al estado 15
    InterfaceDecl  ir al estado 16


State 10

    3 DeclList: Decl .

    $default  reduce usando la regla 3 (DeclList)


State 11

    4 Decl: VarDecl .

    $default  reduce usando la regla 4 (Decl)


State 12

    8 VarDecl: Var . ';'

    ';'  desplazar e ir al estado 22


State 13

    9 Var: Type . T_Identifier
   14 Type: Type . T_Dims
   18 FnDecl: Type . T_Identifier '(' VarList ')' StmtBlock

    T_Dims        desplazar e ir al estado 23
    T_Identifier  desplazar e ir al estado 24


State 14

    5 Decl: FnDecl .

    $default  reduce usando la regla 5 (Decl)


State 15

    6 Decl: ClassDecl .

    $default  reduce usando la regla 6 (Decl)


State 16

    7 Decl: InterfaceDecl .

    $default  reduce usando la regla 7 (Decl)


State 17

   19 FnDecl: T_Void T_Identifier . '(' VarList ')' StmtBlock

    '('  desplazar e ir al estado 25


State 18

   39 ClassDecl: T_Class T_Identifier . Extends Implements '{' FieldList '}'

    T_Extends  desplazar e ir al estado 26

    $default  reduce usando la regla 41 (Extends)

    Extends  ir al estado 27


State 19

   54 InterfaceDecl: T_Interface T_Identifier . '{' PrototypeList '}'

    '{'  desplazar e ir al estado 28


State 20

    0 $accept: Program $end .

    $default  aceptar


State 21

    2 DeclList: DeclList Decl .

    $default  reduce usando la regla 2 (DeclList)


State 22

    8 VarDecl: Var ';' .

    $default  reduce usando la regla 8 (VarDecl)


State 23

   14 Type: Type T_Dims .

    $default  reduce usando la regla 14 (Type)


State 24

    9 Var: Type T_Identifier .
   18 FnDecl: Type T_Identifier . '(' VarList ')' StmtBlock

    '('  desplazar e ir al estado 29

    $default  reduce usando la regla 9 (Var)


State 25

   19 FnDecl: T_Void T_Identifier '(' . VarList ')' StmtBlock

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 32


State 26

   40 Extends: T_Extends . T_Identifier

    T_Identifier  desplazar e ir al estado 33


State 27

   39 ClassDecl: T_Class T_Identifier Extends . Implements '{' FieldList '}'

    T_Implements  desplazar e ir al estado 34

    $default  reduce usando la regla 45 (Implements)

    Implements  ir al estado 35


State 28

   54 InterfaceDecl: T_Interface T_Identifier '{' . PrototypeList '}'

    T_Void    desplazar e ir al estado 36
    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    Type           ir al estado 37
    Prototype      ir al estado 38
    PrototypeList  ir al estado 39


State 29

   18 FnDecl: Type T_Identifier '(' . VarList ')' StmtBlock

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 40


State 30

   16 VarList: Var .

    $default  reduce usando la regla 16 (VarList)


State 31

    9 Var: Type . T_Identifier
   14 Type: Type . T_Dims

    T_Dims        desplazar e ir al estado 23
    T_Identifier  desplazar e ir al estado 41


State 32

   15 VarList: VarList . ',' Var
   19 FnDecl: T_Void T_Identifier '(' VarList . ')' StmtBlock

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 43


State 33

   40 Extends: T_Extends T_Identifier .

    $default  reduce usando la regla 40 (Extends)


State 34

   44 Implements: T_Implements . IdentifierList

    T_Identifier  desplazar e ir al estado 44

    IdentifierList  ir al estado 45


State 35

   39 ClassDecl: T_Class T_Identifier Extends Implements . '{' FieldList '}'

    '{'  desplazar e ir al estado 46


State 36

   51 Prototype: T_Void . T_Identifier '(' VarList ')' ';'

    T_Identifier  desplazar e ir al estado 47


State 37

   14 Type: Type . T_Dims
   50 Prototype: Type . T_Identifier '(' VarList ')' ';'

    T_Dims        desplazar e ir al estado 23
    T_Identifier  desplazar e ir al estado 48


State 38

   53 PrototypeList: Prototype .

    $default  reduce usando la regla 53 (PrototypeList)


State 39

   52 PrototypeList: PrototypeList . Prototype
   54 InterfaceDecl: T_Interface T_Identifier '{' PrototypeList . '}'

    T_Void    desplazar e ir al estado 36
    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5
    '}'       desplazar e ir al estado 49

    Type       ir al estado 37
    Prototype  ir al estado 50


State 40

   15 VarList: VarList . ',' Var
   18 FnDecl: Type T_Identifier '(' VarList . ')' StmtBlock

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 51


State 41

    9 Var: Type T_Identifier .

    $default  reduce usando la regla 9 (Var)


State 42

   15 VarList: VarList ',' . Var

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    Var   ir al estado 52
    Type  ir al estado 31


State 43

   19 FnDecl: T_Void T_Identifier '(' VarList ')' . StmtBlock

    '{'  desplazar e ir al estado 53

    StmtBlock  ir al estado 54


State 44

   43 IdentifierList: T_Identifier .

    $default  reduce usando la regla 43 (IdentifierList)


State 45

   42 IdentifierList: IdentifierList . ',' T_Identifier
   44 Implements: T_Implements IdentifierList .

    ','  desplazar e ir al estado 55

    $default  reduce usando la regla 44 (Implements)


State 46

   39 ClassDecl: T_Class T_Identifier Extends Implements '{' . FieldList '}'

    $default  reduce usando la regla 49 (FieldList)

    FieldList  ir al estado 56


State 47

   51 Prototype: T_Void T_Identifier . '(' VarList ')' ';'

    '('  desplazar e ir al estado 57


State 48

   50 Prototype: Type T_Identifier . '(' VarList ')' ';'

    '('  desplazar e ir al estado 58


State 49

   54 InterfaceDecl: T_Interface T_Identifier '{' PrototypeList '}' .

    $default  reduce usando la regla 54 (InterfaceDecl)


State 50

   52 PrototypeList: PrototypeList Prototype .

    $default  reduce usando la regla 52 (PrototypeList)


State 51

   18 FnDecl: Type T_Identifier '(' VarList ')' . StmtBlock

    '{'  desplazar e ir al estado 53

    StmtBlock  ir al estado 59


State 52

   15 VarList: VarList ',' Var .

    $default  reduce usando la regla 15 (VarList)


State 53

   23 StmtBlock: '{' . VarDeclList StmtList '}'
   24          | '{' . VarDeclList '}'
   25          | '{' . StmtList '}'
   26          | '{' . '}'

    T_Bool      desplazar e ir al estado 2
    T_Int       desplazar e ir al estado 3
    T_Double    desplazar e ir al estado 4
    T_String    desplazar e ir al estado 5
    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 66

    $default  reduce usando la regla 38 (OneExpr)

    VarDecl      ir al estado 67
    Var          ir al estado 12
    Type         ir al estado 31
    VarDeclList  ir al estado 68
    StmtBlock    ir al estado 69
    StmtList     ir al estado 70
    Stmt         ir al estado 71
    Expr         ir al estado 72
    OneExpr      ir al estado 73
    IfStmt       ir al estado 74
    WhileStmt    ir al estado 75
    ForStmt      ir al estado 76
    ReturnStmt   ir al estado 77


State 54

   19 FnDecl: T_Void T_Identifier '(' VarList ')' StmtBlock .

    $default  reduce usando la regla 19 (FnDecl)


State 55

   42 IdentifierList: IdentifierList ',' . T_Identifier

    T_Identifier  desplazar e ir al estado 78


State 56

   39 ClassDecl: T_Class T_Identifier Extends Implements '{' FieldList . '}'
   48 FieldList: FieldList . Field

    T_Void    desplazar e ir al estado 1
    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5
    '}'       desplazar e ir al estado 79

    T_Void    [reduce usando la regla 20 (FnDecl)]
    T_Bool    [reduce usando la regla 20 (FnDecl)]
    T_Int     [reduce usando la regla 20 (FnDecl)]
    T_Double  [reduce usando la regla 20 (FnDecl)]
    T_String  [reduce usando la regla 20 (FnDecl)]
    '}'       [reduce usando la regla 20 (FnDecl)]

    VarDecl  ir al estado 80
    Var      ir al estado 12
    Type     ir al estado 13
    FnDecl   ir al estado 81
    Field    ir al estado 82


State 57

   51 Prototype: T_Void T_Identifier '(' . VarList ')' ';'

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 83


State 58

   50 Prototype: Type T_Identifier '(' . VarList ')' ';'

    T_Bool    desplazar e ir al estado 2
    T_Int     desplazar e ir al estado 3
    T_Double  desplazar e ir al estado 4
    T_String  desplazar e ir al estado 5

    $default  reduce usando la regla 17 (VarList)

    Var      ir al estado 30
    Type     ir al estado 31
    VarList  ir al estado 84


State 59

   18 FnDecl: Type T_Identifier '(' VarList ')' StmtBlock .

    $default  reduce usando la regla 18 (FnDecl)


State 60

   57 WhileStmt: T_While . '(' Expr ')' Stmt

    '('  desplazar e ir al estado 85


State 61

   58 ForStmt: T_For . '(' OneExpr ';' Expr ';' OneExpr ')' Stmt

    '('  desplazar e ir al estado 86


State 62

   55 IfStmt: T_If . '(' Expr ')' Stmt
   56       | T_If . '(' Expr ')' Stmt T_Else Stmt

    '('  desplazar e ir al estado 87


State 63

   59 ReturnStmt: T_Return . OneExpr ';'

    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65

    $default  reduce usando la regla 38 (OneExpr)

    Expr     ir al estado 72
    OneExpr  ir al estado 88


State 64

   36 Expr: T_New . T_Identifier

    T_Identifier  desplazar e ir al estado 89


State 65

   35 Expr: T_ReadLine . '(' ')'

    '('  desplazar e ir al estado 90


State 66

   26 StmtBlock: '{' '}' .

    $default  reduce usando la regla 26 (StmtBlock)


State 67

   22 VarDeclList: VarDecl .

    $default  reduce usando la regla 22 (VarDeclList)


State 68

   21 VarDeclList: VarDeclList . VarDecl
   23 StmtBlock: '{' VarDeclList . StmtList '}'
   24          | '{' VarDeclList . '}'

    T_Bool      desplazar e ir al estado 2
    T_Int       desplazar e ir al estado 3
    T_Double    desplazar e ir al estado 4
    T_String    desplazar e ir al estado 5
    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 91

    $default  reduce usando la regla 38 (OneExpr)

    VarDecl     ir al estado 92
    Var         ir al estado 12
    Type        ir al estado 31
    StmtBlock   ir al estado 69
    StmtList    ir al estado 93
    Stmt        ir al estado 71
    Expr        ir al estado 72
    OneExpr     ir al estado 73
    IfStmt      ir al estado 74
    WhileStmt   ir al estado 75
    ForStmt     ir al estado 76
    ReturnStmt  ir al estado 77


State 69

   30 Stmt: StmtBlock .

    $default  reduce usando la regla 30 (Stmt)


State 70

   25 StmtBlock: '{' StmtList . '}'
   27 StmtList: StmtList . Stmt

    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 94

    $default  reduce usando la regla 38 (OneExpr)

    StmtBlock   ir al estado 69
    Stmt        ir al estado 95
    Expr        ir al estado 72
    OneExpr     ir al estado 73
    IfStmt      ir al estado 74
    WhileStmt   ir al estado 75
    ForStmt     ir al estado 76
    ReturnStmt  ir al estado 77


State 71

   28 StmtList: Stmt .

    $default  reduce usando la regla 28 (StmtList)


State 72

   37 OneExpr: Expr .

    $default  reduce usando la regla 37 (OneExpr)


State 73

   29 Stmt: OneExpr . ';'

    ';'  desplazar e ir al estado 96


State 74

   31 Stmt: IfStmt .

    $default  reduce usando la regla 31 (Stmt)


State 75

   32 Stmt: WhileStmt .

    $default  reduce usando la regla 32 (Stmt)


State 76

   33 Stmt: ForStmt .

    $default  reduce usando la regla 33 (Stmt)


State 77

   34 Stmt: ReturnStmt .

    $default  reduce usando la regla 34 (Stmt)


State 78

   42 IdentifierList: IdentifierList ',' T_Identifier .

    $default  reduce usando la regla 42 (IdentifierList)


State 79

   39 ClassDecl: T_Class T_Identifier Extends Implements '{' FieldList '}' .

    $default  reduce usando la regla 39 (ClassDecl)


State 80

   46 Field: VarDecl .

    $default  reduce usando la regla 46 (Field)


State 81

   47 Field: FnDecl .

    $default  reduce usando la regla 47 (Field)


State 82

   48 FieldList: FieldList Field .

    $default  reduce usando la regla 48 (FieldList)


State 83

   15 VarList: VarList . ',' Var
   51 Prototype: T_Void T_Identifier '(' VarList . ')' ';'

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 97


State 84

   15 VarList: VarList . ',' Var
   50 Prototype: Type T_Identifier '(' VarList . ')' ';'

    ','  desplazar e ir al estado 42
    ')'  desplazar e ir al estado 98


State 85

   57 WhileStmt: T_While '(' . Expr ')' Stmt

    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65

    Expr  ir al estado 99


State 86

   58 ForStmt: T_For '(' . OneExpr ';' Expr ';' OneExpr ')' Stmt

    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65

    $default  reduce usando la regla 38 (OneExpr)

    Expr     ir al estado 72
    OneExpr  ir al estado 100


State 87

   55 IfStmt: T_If '(' . Expr ')' Stmt
   56       | T_If '(' . Expr ')' Stmt T_Else Stmt

    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65

    Expr  ir al estado 101


State 88

   59 ReturnStmt: T_Return OneExpr . ';'

    ';'  desplazar e ir al estado 102


State 89

   36 Expr: T_New T_Identifier .

    $default  reduce usando la regla 36 (Expr)


State 90

   35 Expr: T_ReadLine '(' . ')'

    ')'  desplazar e ir al estado 103


State 91

   24 StmtBlock: '{' VarDeclList '}' .

    $default  reduce usando la regla 24 (StmtBlock)


State 92

   21 VarDeclList: VarDeclList VarDecl .

    $default  reduce usando la regla 21 (VarDeclList)


State 93

   23 StmtBlock: '{' VarDeclList StmtList . '}'
   27 StmtList: StmtList . Stmt

    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53
    '}'         desplazar e ir al estado 104

    $default  reduce usando la regla 38 (OneExpr)

    StmtBlock   ir al estado 69
    Stmt        ir al estado 95
    Expr        ir al estado 72
    OneExpr     ir al estado 73
    IfStmt      ir al estado 74
    WhileStmt   ir al estado 75
    ForStmt     ir al estado 76
    ReturnStmt  ir al estado 77


State 94

   25 StmtBlock: '{' StmtList '}' .

    $default  reduce usando la regla 25 (StmtBlock)


State 95

   27 StmtList: StmtList Stmt .

    $default  reduce usando la regla 27 (StmtList)


State 96

   29 Stmt: OneExpr ';' .

    $default  reduce usando la regla 29 (Stmt)


State 97

   51 Prototype: T_Void T_Identifier '(' VarList ')' . ';'

    ';'  desplazar e ir al estado 105


State 98

   50 Prototype: Type T_Identifier '(' VarList ')' . ';'

    ';'  desplazar e ir al estado 106


State 99

   57 WhileStmt: T_While '(' Expr . ')' Stmt

    ')'  desplazar e ir al estado 107


State 100

   58 ForStmt: T_For '(' OneExpr . ';' Expr ';' OneExpr ')' Stmt

    ';'  desplazar e ir al estado 108


State 101

   55 IfStmt: T_If '(' Expr . ')' Stmt
   56       | T_If '(' Expr . ')' Stmt T_Else Stmt

    ')'  desplazar e ir al estado 109


State 102

   59 ReturnStmt: T_Return OneExpr ';' .

    $default  reduce usando la regla 59 (ReturnStmt)


State 103

   35 Expr: T_ReadLine '(' ')' .

    $default  reduce usando la regla 35 (Expr)


State 104

   23 StmtBlock: '{' VarDeclList StmtList '}' .

    $default  reduce usando la regla 23 (StmtBlock)


State 105

   51 Prototype: T_Void T_Identifier '(' VarList ')' ';' .

    $default  reduce usando la regla 51 (Prototype)


State 106

   50 Prototype: Type T_Identifier '(' VarList ')' ';' .

    $default  reduce usando la regla 50 (Prototype)


State 107

   57 WhileStmt: T_While '(' Expr ')' . Stmt

    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53

    $default  reduce usando la regla 38 (OneExpr)

    StmtBlock   ir al estado 69
    Stmt        ir al estado 110
    Expr        ir al estado 72
    OneExpr     ir al estado 73
    IfStmt      ir al estado 74
    WhileStmt   ir al estado 75
    ForStmt     ir al estado 76
    ReturnStmt  ir al estado 77


State 108

   58 ForStmt: T_For '(' OneExpr ';' . Expr ';' OneExpr ')' Stmt

    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65

    Expr  ir al estado 111


State 109

   55 IfStmt: T_If '(' Expr ')' . Stmt
   56       | T_If '(' Expr ')' . Stmt T_Else Stmt

    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53

    $default  reduce usando la regla 38 (OneExpr)

    StmtBlock   ir al estado 69
    Stmt        ir al estado 112
    Expr        ir al estado 72
    OneExpr     ir al estado 73
    IfStmt      ir al estado 74
    WhileStmt   ir al estado 75
    ForStmt     ir al estado 76
    ReturnStmt  ir al estado 77


State 110

   57 WhileStmt: T_While '(' Expr ')' Stmt .

    $default  reduce usando la regla 57 (WhileStmt)


State 111

   58 ForStmt: T_For '(' OneExpr ';' Expr . ';' OneExpr ')' Stmt

    ';'  desplazar e ir al estado 113


State 112

   55 IfStmt: T_If '(' Expr ')' Stmt .
   56       | T_If '(' Expr ')' Stmt . T_Else Stmt

    T_Else  desplazar e ir al estado 114

    T_Else    [reduce usando la regla 55 (IfStmt)]
    $default  reduce usando la regla 55 (IfStmt)


State 113

   58 ForStmt: T_For '(' OneExpr ';' Expr ';' . OneExpr ')' Stmt

    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65

    $default  reduce usando la regla 38 (OneExpr)

    Expr     ir al estado 72
    OneExpr  ir al estado 115


State 114

   56 IfStmt: T_If '(' Expr ')' Stmt T_Else . Stmt

    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53

    $default  reduce usando la regla 38 (OneExpr)

    StmtBlock   ir al estado 69
    Stmt        ir al estado 116
    Expr        ir al estado 72
    OneExpr     ir al estado 73
    IfStmt      ir al estado 74
    WhileStmt   ir al estado 75
    ForStmt     ir al estado 76
    ReturnStmt  ir al estado 77


State 115

   58 ForStmt: T_For '(' OneExpr ';' Expr ';' OneExpr . ')' Stmt

    ')'  desplazar e ir al estado 117


State 116

   56 IfStmt: T_If '(' Expr ')' Stmt T_Else Stmt .

    $default  reduce usando la regla 56 (IfStmt)


State 117

   58 ForStmt: T_For '(' OneExpr ';' Expr ';' OneExpr ')' . Stmt

    T_While     desplazar e ir al estado 60
    T_For       desplazar e ir al estado 61
    T_If        desplazar e ir al estado 62
    T_Return    desplazar e ir al estado 63
    T_New       desplazar e ir al estado 64
    T_ReadLine  desplazar e ir al estado 65
    '{'         desplazar e ir al estado 53

    $default  reduce usando la regla 38 (OneExpr)

    StmtBlock   ir al estado 69
    Stmt        ir al estado 118
    Expr        ir al estado 72
    OneExpr     ir al estado 73
    IfStmt      ir al estado 74
    WhileStmt   ir al estado 75
    ForStmt     ir al estado 76
    ReturnStmt  ir al estado 77


State 118

   58 ForStmt: T_For '(' OneExpr ';' Expr ';' OneExpr ')' Stmt .

    $default  reduce usando la regla 58 (ForStmt)
